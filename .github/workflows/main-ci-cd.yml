name: CI/CD main workflow


on:
  push:
    branches:
      - master
      

jobs:

  build:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
     
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx

      - name: Build
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile
          load: true
          tags: |
            ghcr.io/romanmazyrin/salaries_project:latest
            salaries_project_temp
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  lint:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Lint
        run: docker run salaries_project_temp poetry run black . && poetry run flake8 .

  tests:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Tests
        run: docker run salaries_project_temp poetry run pytest -s .

  push:
    runs-on: ubuntu-latest
    needs: [list, tests]
    steps:
      - name: Push
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/romanmazyrin/salaries_project:latest
            
            
  deploy:
    runs-on: ubuntu-latest
    needs: [push]
    steps:
      - name: executing remote ssh docker stack deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            docker pull ghcr.io/romanmazyrin/salaries_project:latest
            docker stack deploy -c salary_service/docker-compose.yml --with-registry-auth django_salaries
    
